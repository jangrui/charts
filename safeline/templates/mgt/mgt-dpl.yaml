apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "safeline.mgt" . }}
  labels:
{{ include "safeline.labels" . | indent 4 }}
    component: mgt
spec:
  replicas: {{ .Values.mgt.replicas }}
  revisionHistoryLimit: {{ .Values.mgt.revisionHistoryLimit }}
  strategy:
{{- if .Values.strategy }}
{{ toYaml .Values.strategy | indent 4 }}
{{- end }}
  selector:
    matchLabels:
{{ include "safeline.matchLabels" . | indent 6 }}
      component: mgt
  template:
    metadata:
      labels:
{{ include "safeline.matchLabels" . | indent 8 }}
        component: mgt
      annotations:
{{- if .Values.mgt.podAnnotations }}
{{ toYaml .Values.mgt.podAnnotations | indent 8 }}
{{- end }}
    spec:
{{- if .Values.mgt.serviceAccountName }}
      serviceAccountName: {{ .Values.mgt.serviceAccountName }}
{{- end -}}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      automountServiceAccountToken: {{ .Values.mgt.automountServiceAccountToken | default false }}
      terminationGracePeriodSeconds: 120
      containers:
      - name: mgt
        image: {{ default .Values.global.image.registry .Values.mgt.image.registry }}/{{ .Values.mgt.image.repository }}:{{ default .Chart.AppVersion .Values.mgt.image.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        ports:
          - name: web
            containerPort: {{ template "safeline.mgt.web.port" . }}
          - name: api
            containerPort: {{ template "safeline.mgt.api.port" . }}
          - name: tcd
            containerPort: {{ template "safeline.mgt.tcd.port" . }}
        env:
          - name: MGT_PG
            value: {{ template "safeline.database.url" . }}
          - name: TCD_TASK_ADDRESS
            value: {{ template "safeline.tengine" . }}:{{ template "safeline.tengine.tcd.port" . }}
        volumeMounts:
          - name: localtime
            mountPath: /etc/localtime
            readOnly: true
          - mountPath: /app/data
            name: mgt
          - mountPath: /app/sock
            name: sock
          - mountPath: /app/log
            name: logs
        livenessProbe:
          httpGet:
            scheme: HTTPS
            port: 1443
            path: /api/open/health
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            scheme: HTTPS
            port: 1443
            path: /api/open/health
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
{{- if .Values.mgt.resources }}
        resources:
{{ toYaml .Values.mgt.resources | indent 10 }}
{{- end }}
      volumes:
        - name: localtime
          hostPath:
            path: /etc/localtime
        {{- if .Values.persistence.enabled }}
        - name: mgt
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.persistentVolumeClaim.mgt.existingClaim | default (include "safeline.mgt" .) }}
        - name: sock
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.persistentVolumeClaim.sock.existingClaim | default (include "safeline.sock" .) }}
        - name: logs
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.persistentVolumeClaim.logs.existingClaim | default (include "safeline.logs" .) }}
        {{- else -}}
        - name: mgt
          emptyDir: {}
        - name: sock
          emptyDir: {}
        - name: logs
          emptyDir: {}
        {{- end -}}

    {{- with .Values.mgt.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.mgt.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.mgt.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- if .Values.mgt.priorityClassName }}
      priorityClassName: {{ .Values.mgt.priorityClassName }}
    {{- end }}
